{
  "api/Google.Cloud.Functions.Framework.html": {
    "href": "api/Google.Cloud.Functions.Framework.html",
    "title": "Namespace Google.Cloud.Functions.Framework | Sentry .NET",
    "keywords": "Namespace Google.Cloud.Functions.Framework Classes SentryStartup Starts up the GCP Function integration."
  },
  "api/Google.Cloud.Functions.Framework.SentryStartup.html": {
    "href": "api/Google.Cloud.Functions.Framework.SentryStartup.html",
    "title": "Class SentryStartup | Sentry .NET",
    "keywords": "Class SentryStartup Starts up the GCP Function integration. Inheritance Object SentryStartup Namespace : Google.Cloud.Functions.Framework Assembly : Sentry.Google.Cloud.Functions.dll Syntax public class SentryStartup : FunctionsStartup Methods | Improve this Doc View Source Configure(WebHostBuilderContext, IApplicationBuilder) Configure Sentry middlewares./>. Declaration public override void Configure(WebHostBuilderContext context, IApplicationBuilder app) Parameters Type Name Description WebHostBuilderContext context IApplicationBuilder app | Improve this Doc View Source ConfigureLogging(WebHostBuilderContext, ILoggingBuilder) Configure Sentry logging. Declaration public override void ConfigureLogging(WebHostBuilderContext context, ILoggingBuilder logging) Parameters Type Name Description WebHostBuilderContext context ILoggingBuilder logging | Improve this Doc View Source ConfigureServices(WebHostBuilderContext, IServiceCollection) Configure Sentry services. Declaration public override void ConfigureServices(WebHostBuilderContext context, IServiceCollection services) Parameters Type Name Description WebHostBuilderContext context IServiceCollection services"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API | Sentry .NET",
    "keywords": "API Welcome to the API documentation of the Sentry .NET SDK. Acquisition This documentation include types which are part of different NuGet packages provided by Sentry . When visualizing a type, the documentation includes the name of the Assembly which contains that type. Assembly names are equal to the NuGet package that contains the assembly. For example, the @Sentry.Dsn class mentions: Assembly: Sentry.dll This means the type resides in the NuGet package Sentry Looking at SentryLoggerProvider you'll notice: Assembly: Sentry.Extensions.Logging.dll That assembly is found on NuGet Sentry.Extensions.Logging"
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder | Sentry .NET",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes SentryTracingMiddlewareExtensions Extensions for enabling Sentry.AspNetCore.SentryTracingMiddleware ."
  },
  "api/Microsoft.AspNetCore.Builder.SentryTracingMiddlewareExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.SentryTracingMiddlewareExtensions.html",
    "title": "Class SentryTracingMiddlewareExtensions | Sentry .NET",
    "keywords": "Class SentryTracingMiddlewareExtensions Extensions for enabling Sentry.AspNetCore.SentryTracingMiddleware . Inheritance Object SentryTracingMiddlewareExtensions Namespace : Microsoft.AspNetCore.Builder Assembly : Sentry.AspNetCore.dll Syntax public static class SentryTracingMiddlewareExtensions : object Methods | Improve this Doc View Source UseSentryTracing(IApplicationBuilder) Adds Sentry's tracing middleware to the pipeline. Make sure to place this middleware after UseRouting(...) . Declaration public static IApplicationBuilder UseSentryTracing(this IApplicationBuilder builder) Parameters Type Name Description IApplicationBuilder builder Returns Type Description IApplicationBuilder"
  },
  "api/Microsoft.AspNetCore.Hosting.html": {
    "href": "api/Microsoft.AspNetCore.Hosting.html",
    "title": "Namespace Microsoft.AspNetCore.Hosting | Sentry .NET",
    "keywords": "Namespace Microsoft.AspNetCore.Hosting Classes SentryWebHostBuilderExtensions Extension methods to"
  },
  "api/Microsoft.AspNetCore.Hosting.SentryWebHostBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Hosting.SentryWebHostBuilderExtensions.html",
    "title": "Class SentryWebHostBuilderExtensions | Sentry .NET",
    "keywords": "Class SentryWebHostBuilderExtensions Extension methods to Inheritance Object SentryWebHostBuilderExtensions Namespace : Microsoft.AspNetCore.Hosting Assembly : Sentry.AspNetCore.dll Syntax public static class SentryWebHostBuilderExtensions : object Methods | Improve this Doc View Source AddSentryTunneling(IServiceCollection, String[]) Adds and configures the Sentry tunneling middleware. Declaration public static void AddSentryTunneling(this IServiceCollection services, params string[] hostnames) Parameters Type Name Description IServiceCollection services String [] hostnames The extra hostnames to be allowed for the tunneling. sentry.io is allowed by default; add your own Sentry domain if you use a self-hosted Sentry or Relay. | Improve this Doc View Source UseSentry(IWebHostBuilder) Uses Sentry integration. Declaration public static IWebHostBuilder UseSentry(this IWebHostBuilder builder) Parameters Type Name Description IWebHostBuilder builder The builder. Returns Type Description IWebHostBuilder | Improve this Doc View Source UseSentry(IWebHostBuilder, Nullable<Action<ISentryBuilder>>) Uses Sentry integration. Declaration public static IWebHostBuilder UseSentry(this IWebHostBuilder builder, Action<ISentryBuilder>? configureSentry) Parameters Type Name Description IWebHostBuilder builder The builder. Nullable < Action < ISentryBuilder >> configureSentry The Sentry builder. Returns Type Description IWebHostBuilder | Improve this Doc View Source UseSentry(IWebHostBuilder, Nullable<Action<SentryAspNetCoreOptions>>) Uses Sentry integration. Declaration public static IWebHostBuilder UseSentry(this IWebHostBuilder builder, Action<SentryAspNetCoreOptions>? configureOptions) Parameters Type Name Description IWebHostBuilder builder The builder. Nullable < Action < SentryAspNetCoreOptions >> configureOptions The configure options. Returns Type Description IWebHostBuilder | Improve this Doc View Source UseSentry(IWebHostBuilder, Nullable<Action<WebHostBuilderContext, ISentryBuilder>>) Uses Sentry integration. Declaration public static IWebHostBuilder UseSentry(this IWebHostBuilder builder, Action<WebHostBuilderContext, ISentryBuilder>? configureSentry) Parameters Type Name Description IWebHostBuilder builder The builder. Nullable < Action < WebHostBuilderContext , ISentryBuilder >> configureSentry The Sentry builder. Returns Type Description IWebHostBuilder | Improve this Doc View Source UseSentry(IWebHostBuilder, Nullable<Action<WebHostBuilderContext, SentryAspNetCoreOptions>>) Uses Sentry integration. Declaration public static IWebHostBuilder UseSentry(this IWebHostBuilder builder, Action<WebHostBuilderContext, SentryAspNetCoreOptions>? configureOptions) Parameters Type Name Description IWebHostBuilder builder The builder. Nullable < Action < WebHostBuilderContext , SentryAspNetCoreOptions >> configureOptions The configure options. Returns Type Description IWebHostBuilder | Improve this Doc View Source UseSentry(IWebHostBuilder, String) Uses Sentry integration. Declaration public static IWebHostBuilder UseSentry(this IWebHostBuilder builder, string dsn) Parameters Type Name Description IWebHostBuilder builder The builder. String dsn The DSN. Returns Type Description IWebHostBuilder | Improve this Doc View Source UseSentryTunneling(IApplicationBuilder, String) Adds the SentryTunnelMiddleware to the pipeline. Declaration public static void UseSentryTunneling(this IApplicationBuilder builder, string path = \"/tunnel\") Parameters Type Name Description IApplicationBuilder builder The app builder. String path The path to listen for Sentry envelopes."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | Sentry .NET",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions Extension methods for"
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Sentry .NET",
    "keywords": "Class ServiceCollectionExtensions Extension methods for Inheritance Object ServiceCollectionExtensions Namespace : Microsoft.Extensions.DependencyInjection Assembly : Sentry.AspNetCore.dll Syntax public static class ServiceCollectionExtensions : object Methods | Improve this Doc View Source AddSentry(IServiceCollection) Adds Sentry's services to the Declaration public static ISentryBuilder AddSentry(this IServiceCollection services) Parameters Type Name Description IServiceCollection services The services. Returns Type Description ISentryBuilder"
  },
  "api/Microsoft.Extensions.Logging.html": {
    "href": "api/Microsoft.Extensions.Logging.html",
    "title": "Namespace Microsoft.Extensions.Logging | Sentry .NET",
    "keywords": "Namespace Microsoft.Extensions.Logging Classes LoggingBuilderExtensions LoggingBuilder extensions. SentryLoggerFactoryExtensions SentryLoggerFactory extensions."
  },
  "api/Microsoft.Extensions.Logging.LoggingBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.Logging.LoggingBuilderExtensions.html",
    "title": "Class LoggingBuilderExtensions | Sentry .NET",
    "keywords": "Class LoggingBuilderExtensions LoggingBuilder extensions. Inheritance Object LoggingBuilderExtensions Namespace : Microsoft.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax public static class LoggingBuilderExtensions : object Methods | Improve this Doc View Source AddSentry(ILoggingBuilder) Adds the Sentry logging integration. Declaration public static ILoggingBuilder AddSentry(this ILoggingBuilder builder) Parameters Type Name Description ILoggingBuilder builder The builder. Returns Type Description ILoggingBuilder | Improve this Doc View Source AddSentry(ILoggingBuilder, Nullable<Action<SentryLoggingOptions>>) Adds the Sentry logging integration. Declaration public static ILoggingBuilder AddSentry(this ILoggingBuilder builder, Action<SentryLoggingOptions>? optionsConfiguration) Parameters Type Name Description ILoggingBuilder builder The builder. Nullable < Action < SentryLoggingOptions >> optionsConfiguration The options configuration. Returns Type Description ILoggingBuilder | Improve this Doc View Source AddSentry(ILoggingBuilder, String) Adds the Sentry logging integration. Declaration public static ILoggingBuilder AddSentry(this ILoggingBuilder builder, string dsn) Parameters Type Name Description ILoggingBuilder builder The builder. String dsn The DSN. Returns Type Description ILoggingBuilder"
  },
  "api/Microsoft.Extensions.Logging.SentryLoggerFactoryExtensions.html": {
    "href": "api/Microsoft.Extensions.Logging.SentryLoggerFactoryExtensions.html",
    "title": "Class SentryLoggerFactoryExtensions | Sentry .NET",
    "keywords": "Class SentryLoggerFactoryExtensions SentryLoggerFactory extensions. Inheritance Object SentryLoggerFactoryExtensions Namespace : Microsoft.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax public static class SentryLoggerFactoryExtensions : object Methods | Improve this Doc View Source AddSentry(ILoggerFactory, Nullable<Action<SentryLoggingOptions>>) Adds the Sentry logging integration. Declaration public static ILoggerFactory AddSentry(this ILoggerFactory factory, Action<SentryLoggingOptions>? optionsConfiguration = null) Parameters Type Name Description ILoggerFactory factory The factory. Nullable < Action < SentryLoggingOptions >> optionsConfiguration The options configuration. Returns Type Description ILoggerFactory Remarks This method does not need to be called when calling UseSentry with ASP.NET Core since that integrates with the logging framework automatically."
  },
  "api/NLog.ConfigurationExtensions.html": {
    "href": "api/NLog.ConfigurationExtensions.html",
    "title": "Class ConfigurationExtensions | Sentry .NET",
    "keywords": "Class ConfigurationExtensions NLog configuration extensions. Inheritance Object ConfigurationExtensions Namespace : NLog Assembly : Sentry.NLog.dll Syntax public static class ConfigurationExtensions : object Methods | Improve this Doc View Source AddSentry(LoggingConfiguration, Nullable<Action<SentryNLogOptions>>) Adds a target for Sentry to the NLog configuration. Declaration public static LoggingConfiguration AddSentry(this LoggingConfiguration configuration, Action<SentryNLogOptions>? optionsConfig = null) Parameters Type Name Description LoggingConfiguration configuration The NLog configuration. Nullable < Action < SentryNLogOptions >> optionsConfig An optional action for configuring the Sentry target options. Returns Type Description LoggingConfiguration The configuration. Remarks If DSN is not set, the SDK will look for an environment variable called SENTRY_DSN. If nothing is found, SDK is disabled. | Improve this Doc View Source AddSentry(LoggingConfiguration, Nullable<String>, Nullable<Action<SentryNLogOptions>>) Adds a target for Sentry to the NLog configuration. Declaration public static LoggingConfiguration AddSentry(this LoggingConfiguration configuration, string? dsn, Action<SentryNLogOptions>? optionsConfig = null) Parameters Type Name Description LoggingConfiguration configuration The NLog configuration. Nullable < String > dsn The sentry DSN. If DSN is not set, the SDK will look for an environment variable called SENTRY_DSN. If nothing is found, SDK is disabled. Nullable < Action < SentryNLogOptions >> optionsConfig An optional action for configuring the Sentry target options. Returns Type Description LoggingConfiguration The configuration. | Improve this Doc View Source AddSentry(LoggingConfiguration, Nullable<String>, String, Nullable<Action<SentryNLogOptions>>) Adds a target for Sentry to the NLog configuration. Declaration public static LoggingConfiguration AddSentry(this LoggingConfiguration configuration, string? dsn, string targetName, Action<SentryNLogOptions>? optionsConfig = null) Parameters Type Name Description LoggingConfiguration configuration The NLog configuration. Nullable < String > dsn The sentry DSN. String targetName The name to give the new target. Nullable < Action < SentryNLogOptions >> optionsConfig An optional action for configuring the Sentry target options. Returns Type Description LoggingConfiguration The configuration. | Improve this Doc View Source AddTag(SentryNLogOptions, String, Layout) Add additional tags that will be sent with every message. Declaration public static void AddTag(this SentryNLogOptions options, string name, Layout layout) Parameters Type Name Description SentryNLogOptions options The options being configured. String name The name of the tag. Layout layout The layout to be rendered for the tag"
  },
  "api/NLog.html": {
    "href": "api/NLog.html",
    "title": "Namespace NLog | Sentry .NET",
    "keywords": "Namespace NLog Classes ConfigurationExtensions NLog configuration extensions."
  },
  "api/Sentry.AspNet.html": {
    "href": "api/Sentry.AspNet.html",
    "title": "Namespace Sentry.AspNet | Sentry .NET",
    "keywords": "Namespace Sentry.AspNet Classes HttpContextExtensions Sentry extensions for . SentryAspNetOptionsExtensions SentryOptions extensions. SentryHttpServerUtilityExtensions HttpServerUtility extensions."
  },
  "api/Sentry.AspNet.HttpContextExtensions.html": {
    "href": "api/Sentry.AspNet.HttpContextExtensions.html",
    "title": "Class HttpContextExtensions | Sentry .NET",
    "keywords": "Class HttpContextExtensions Sentry extensions for . Inheritance Object HttpContextExtensions Namespace : Sentry.AspNet Assembly : Sentry.AspNet.dll Syntax public static class HttpContextExtensions : object Methods | Improve this Doc View Source FinishSentryTransaction(HttpContext) Finishes an active Sentry transaction that encompasses the currently executing HTTP request (if present). Declaration public static void FinishSentryTransaction(this HttpContext httpContext) Parameters Type Name Description HttpContext httpContext | Improve this Doc View Source StartSentryTransaction(HttpContext) Starts a new Sentry transaction that encompasses the currently executing HTTP request. Declaration public static ITransaction StartSentryTransaction(this HttpContext httpContext) Parameters Type Name Description HttpContext httpContext Returns Type Description ITransaction"
  },
  "api/Sentry.AspNet.SentryAspNetOptionsExtensions.html": {
    "href": "api/Sentry.AspNet.SentryAspNetOptionsExtensions.html",
    "title": "Class SentryAspNetOptionsExtensions | Sentry .NET",
    "keywords": "Class SentryAspNetOptionsExtensions SentryOptions extensions. Inheritance Object SentryAspNetOptionsExtensions Namespace : Sentry.AspNet Assembly : Sentry.AspNet.dll Syntax public static class SentryAspNetOptionsExtensions : object Methods | Improve this Doc View Source AddAspNet(SentryOptions, RequestSize) Adds ASP.NET classic integration. Declaration public static void AddAspNet(this SentryOptions options, RequestSize maxRequestBodySize = null) Parameters Type Name Description SentryOptions options RequestSize maxRequestBodySize"
  },
  "api/Sentry.AspNet.SentryHttpServerUtilityExtensions.html": {
    "href": "api/Sentry.AspNet.SentryHttpServerUtilityExtensions.html",
    "title": "Class SentryHttpServerUtilityExtensions | Sentry .NET",
    "keywords": "Class SentryHttpServerUtilityExtensions HttpServerUtility extensions. Inheritance Object SentryHttpServerUtilityExtensions Namespace : Sentry.AspNet Assembly : Sentry.AspNet.dll Syntax public static class SentryHttpServerUtilityExtensions : object Methods | Improve this Doc View Source CaptureLastError(HttpServerUtility) Captures the last error from the given HttpServerUtility and sends it to Sentry. Declaration public static SentryId CaptureLastError(this HttpServerUtility server) Parameters Type Name Description HttpServerUtility server The HttpServerUtility that contains the last error. Returns Type Description SentryId A SentryId."
  },
  "api/Sentry.AspNetCore.Grpc.DefaultProtobufRequestPayloadExtractor.html": {
    "href": "api/Sentry.AspNetCore.Grpc.DefaultProtobufRequestPayloadExtractor.html",
    "title": "Class DefaultProtobufRequestPayloadExtractor | Sentry .NET",
    "keywords": "Class DefaultProtobufRequestPayloadExtractor Default request payload extractor that will read the request as an Inheritance Object DefaultProtobufRequestPayloadExtractor Implements IProtobufRequestPayloadExtractor Namespace : Sentry.AspNetCore.Grpc Assembly : Sentry.AspNetCore.Grpc.dll Syntax public class DefaultProtobufRequestPayloadExtractor : object, IProtobufRequestPayloadExtractor Methods | Improve this Doc View Source ExtractPayload<TRequest>(IProtobufRequest<TRequest>) Extracts the request body of the IProtobufRequest<TRequest> as an . Declaration public IMessage ExtractPayload<TRequest>(IProtobufRequest<TRequest> request) where TRequest : class, IMessage Parameters Type Name Description IProtobufRequest <TRequest> request Returns Type Description IMessage Type Parameters Name Description TRequest Implements IProtobufRequestPayloadExtractor"
  },
  "api/Sentry.AspNetCore.Grpc.html": {
    "href": "api/Sentry.AspNetCore.Grpc.html",
    "title": "Namespace Sentry.AspNetCore.Grpc | Sentry .NET",
    "keywords": "Namespace Sentry.AspNetCore.Grpc Classes DefaultProtobufRequestPayloadExtractor Default request payload extractor that will read the request as an ProtobufRequestExtractionDispatcher Dispatches request message extractions if enabled and within limits. ScopeExtensions Scope Extensions SentryBuilderExtensions Extension methods for ISentryBuilder SentryGrpcInterceptor Sentry interceptor for ASP.NET Core gRPC Interfaces IProtobufRequest<TRequest> An abstraction to a gRPC Request. IProtobufRequestPayloadExtractor A request extractor."
  },
  "api/Sentry.AspNetCore.Grpc.IProtobufRequest-1.html": {
    "href": "api/Sentry.AspNetCore.Grpc.IProtobufRequest-1.html",
    "title": "Interface IProtobufRequest<TRequest> | Sentry .NET",
    "keywords": "Interface IProtobufRequest<TRequest> An abstraction to a gRPC Request. Namespace : Sentry.AspNetCore.Grpc Assembly : Sentry.AspNetCore.Grpc.dll Syntax public interface IProtobufRequest<TRequest> Type Parameters Name Description TRequest Properties | Improve this Doc View Source ContentLength The content length. Declaration long? ContentLength { get; } Property Value Type Description Nullable < Int64 > | Improve this Doc View Source Request The request message. Declaration TRequest Request { get; } Property Value Type Description TRequest"
  },
  "api/Sentry.AspNetCore.Grpc.IProtobufRequestPayloadExtractor.html": {
    "href": "api/Sentry.AspNetCore.Grpc.IProtobufRequestPayloadExtractor.html",
    "title": "Interface IProtobufRequestPayloadExtractor | Sentry .NET",
    "keywords": "Interface IProtobufRequestPayloadExtractor A request extractor. Namespace : Sentry.AspNetCore.Grpc Assembly : Sentry.AspNetCore.Grpc.dll Syntax public interface IProtobufRequestPayloadExtractor Methods | Improve this Doc View Source ExtractPayload<TRequest>(IProtobufRequest<TRequest>) Extracts the payload of the provided IProtobufRequest<TRequest> . Declaration IMessage? ExtractPayload<TRequest>(IProtobufRequest<TRequest> request) where TRequest : class, IMessage Parameters Type Name Description IProtobufRequest <TRequest> request The gRPC Request object. Returns Type Description Nullable < IMessage > The extracted payload. Type Parameters Name Description TRequest"
  },
  "api/Sentry.AspNetCore.Grpc.ProtobufRequestExtractionDispatcher.html": {
    "href": "api/Sentry.AspNetCore.Grpc.ProtobufRequestExtractionDispatcher.html",
    "title": "Class ProtobufRequestExtractionDispatcher | Sentry .NET",
    "keywords": "Class ProtobufRequestExtractionDispatcher Dispatches request message extractions if enabled and within limits. Inheritance Object ProtobufRequestExtractionDispatcher Implements IProtobufRequestPayloadExtractor Namespace : Sentry.AspNetCore.Grpc Assembly : Sentry.AspNetCore.Grpc.dll Syntax public class ProtobufRequestExtractionDispatcher : object, IProtobufRequestPayloadExtractor Constructors | Improve this Doc View Source ProtobufRequestExtractionDispatcher(IEnumerable<IProtobufRequestPayloadExtractor>, SentryOptions, Func<RequestSize>) Creates a new instance of ProtobufRequestExtractionDispatcher . Declaration public ProtobufRequestExtractionDispatcher(IEnumerable<IProtobufRequestPayloadExtractor> extractors, SentryOptions options, Func<RequestSize> sizeSwitch) Parameters Type Name Description IEnumerable < IProtobufRequestPayloadExtractor > extractors Extractors to use. SentryOptions options Sentry Options. Func < RequestSize > sizeSwitch The max request size to capture. Methods | Improve this Doc View Source ExtractPayload<TRequest>(IProtobufRequest<TRequest>) Extract the payload using the provided extractors. Declaration public IMessage? ExtractPayload<TRequest>(IProtobufRequest<TRequest> request) where TRequest : class, IMessage Parameters Type Name Description IProtobufRequest <TRequest> request The request. Returns Type Description Nullable < IMessage > A serializable representation of the payload. Type Parameters Name Description TRequest Implements IProtobufRequestPayloadExtractor"
  },
  "api/Sentry.AspNetCore.Grpc.ScopeExtensions.html": {
    "href": "api/Sentry.AspNetCore.Grpc.ScopeExtensions.html",
    "title": "Class ScopeExtensions | Sentry .NET",
    "keywords": "Class ScopeExtensions Scope Extensions Inheritance Object ScopeExtensions Namespace : Sentry.AspNetCore.Grpc Assembly : Sentry.AspNetCore.Grpc.dll Syntax public static class ScopeExtensions : object Methods | Improve this Doc View Source Populate<TRequest>(Scope, ServerCallContext, TRequest, SentryAspNetCoreOptions) Populates the scope with the gRPC data Declaration public static void Populate<TRequest>(this Scope scope, ServerCallContext context, TRequest request, SentryAspNetCoreOptions options) where TRequest : class Parameters Type Name Description Scope scope ServerCallContext context TRequest request SentryAspNetCoreOptions options Type Parameters Name Description TRequest"
  },
  "api/Sentry.AspNetCore.Grpc.SentryBuilderExtensions.html": {
    "href": "api/Sentry.AspNetCore.Grpc.SentryBuilderExtensions.html",
    "title": "Class SentryBuilderExtensions | Sentry .NET",
    "keywords": "Class SentryBuilderExtensions Extension methods for ISentryBuilder Inheritance Object SentryBuilderExtensions Namespace : Sentry.AspNetCore.Grpc Assembly : Sentry.AspNetCore.Grpc.dll Syntax public static class SentryBuilderExtensions : object Methods | Improve this Doc View Source AddGrpc(ISentryBuilder) Adds gRPC integration to Sentry Declaration public static ISentryBuilder AddGrpc(this ISentryBuilder builder) Parameters Type Name Description ISentryBuilder builder Returns Type Description ISentryBuilder"
  },
  "api/Sentry.AspNetCore.Grpc.SentryGrpcInterceptor.html": {
    "href": "api/Sentry.AspNetCore.Grpc.SentryGrpcInterceptor.html",
    "title": "Class SentryGrpcInterceptor | Sentry .NET",
    "keywords": "Class SentryGrpcInterceptor Sentry interceptor for ASP.NET Core gRPC Inheritance Object SentryGrpcInterceptor Namespace : Sentry.AspNetCore.Grpc Assembly : Sentry.AspNetCore.Grpc.dll Syntax public class SentryGrpcInterceptor : Interceptor Constructors | Improve this Doc View Source SentryGrpcInterceptor(Func<IHub>, IOptions<SentryAspNetCoreOptions>) Initializes a new instance of the SentryGrpcInterceptor class. Declaration public SentryGrpcInterceptor(Func<IHub> hubAccessor, IOptions<SentryAspNetCoreOptions> options) Parameters Type Name Description Func < IHub > hubAccessor The sentry Hub accessor. IOptions < SentryAspNetCoreOptions > options The options for this integration Methods | Improve this Doc View Source ClientStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest>, ServerCallContext, ClientStreamingServerMethod<TRequest, TResponse>) Handles the ClientStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest>, ServerCallContext, ClientStreamingServerMethod<TRequest, TResponse>) while capturing any errors Declaration public override Task<TResponse> ClientStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest> requestStream, ServerCallContext context, ClientStreamingServerMethod<TRequest, TResponse> continuation) Parameters Type Name Description IAsyncStreamReader <TRequest> requestStream The request stream ServerCallContext context The server call context ClientStreamingServerMethod <TRequest, TResponse> continuation The continuation Returns Type Description Task <TResponse> Type Parameters Name Description TRequest The request type TResponse The response type | Improve this Doc View Source DuplexStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest>, IServerStreamWriter<TResponse>, ServerCallContext, DuplexStreamingServerMethod<TRequest, TResponse>) Handles the while capturing any errors Declaration public override Task DuplexStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest> requestStream, IServerStreamWriter<TResponse> responseStream, ServerCallContext context, DuplexStreamingServerMethod<TRequest, TResponse> continuation) Parameters Type Name Description IAsyncStreamReader <TRequest> requestStream The request stream IServerStreamWriter <TResponse> responseStream The response stream ServerCallContext context The server call context DuplexStreamingServerMethod <TRequest, TResponse> continuation The continuation Returns Type Description Task Type Parameters Name Description TRequest The request type TResponse The response type | Improve this Doc View Source ServerStreamingServerHandler<TRequest, TResponse>(TRequest, IServerStreamWriter<TResponse>, ServerCallContext, ServerStreamingServerMethod<TRequest, TResponse>) Handles the while capturing any errors Declaration public override Task ServerStreamingServerHandler<TRequest, TResponse>(TRequest request, IServerStreamWriter<TResponse> responseStream, ServerCallContext context, ServerStreamingServerMethod<TRequest, TResponse> continuation) Parameters Type Name Description TRequest request The request IServerStreamWriter <TResponse> responseStream The response stream ServerCallContext context The server call context ServerStreamingServerMethod <TRequest, TResponse> continuation The continuation Returns Type Description Task Type Parameters Name Description TRequest The request type TResponse The response type | Improve this Doc View Source UnaryServerHandler<TRequest, TResponse>(TRequest, ServerCallContext, UnaryServerMethod<TRequest, TResponse>) Handles the while capturing any errors Declaration public override Task<TResponse> UnaryServerHandler<TRequest, TResponse>(TRequest request, ServerCallContext context, UnaryServerMethod<TRequest, TResponse> continuation) Parameters Type Name Description TRequest request The request ServerCallContext context The server call context UnaryServerMethod <TRequest, TResponse> continuation The continuation Returns Type Description Task <TResponse> Type Parameters Name Description TRequest The request type TResponse The response type"
  },
  "api/Sentry.AspNetCore.html": {
    "href": "api/Sentry.AspNetCore.html",
    "title": "Namespace Sentry.AspNetCore | Sentry .NET",
    "keywords": "Namespace Sentry.AspNetCore Classes SamplingExtensions Methods to extract ASP.NET Core specific data from . ScopeExtensions Scope Extensions SentryAspNetCoreLoggerProvider Logger provider for Sentry. SentryAspNetCoreOptions An options class for the ASP.NET Core Sentry integration SentryAspNetCoreOptionsSetup Sets up ASP.NET Core option for Sentry. SentryBuilderExtensions Extension methods for ISentryBuilder SentryStartupFilter Starts Sentry integration. SentryTunnelMiddleware Middleware that can forward Sentry envelopes. Interfaces ISentryBuilder Allows for further customization of Sentry integration IUserFactory Sentry User Factory Delegates TransactionNameProvider Provides the strategy to define the name of a transaction based on the ."
  },
  "api/Sentry.AspNetCore.ISentryBuilder.html": {
    "href": "api/Sentry.AspNetCore.ISentryBuilder.html",
    "title": "Interface ISentryBuilder | Sentry .NET",
    "keywords": "Interface ISentryBuilder Allows for further customization of Sentry integration Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public interface ISentryBuilder Properties | Improve this Doc View Source Services Gets the where Sentry services are configured. Declaration IServiceCollection Services { get; } Property Value Type Description IServiceCollection Extension Methods SentryBuilderExtensions.AddSentryOptions(ISentryBuilder, Nullable<Action<SentryAspNetCoreOptions>>) SentryBuilderExtensions.AddGrpc(ISentryBuilder)"
  },
  "api/Sentry.AspNetCore.IUserFactory.html": {
    "href": "api/Sentry.AspNetCore.IUserFactory.html",
    "title": "Interface IUserFactory | Sentry .NET",
    "keywords": "Interface IUserFactory Sentry User Factory Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public interface IUserFactory Methods | Improve this Doc View Source Create(HttpContext) Creates a from the Declaration User? Create(HttpContext context) Parameters Type Name Description HttpContext context The HttpContext where the user resides Returns Type Description Nullable < User > The protocol user"
  },
  "api/Sentry.AspNetCore.SamplingExtensions.html": {
    "href": "api/Sentry.AspNetCore.SamplingExtensions.html",
    "title": "Class SamplingExtensions | Sentry .NET",
    "keywords": "Class SamplingExtensions Methods to extract ASP.NET Core specific data from . Inheritance Object SamplingExtensions Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public static class SamplingExtensions : object Methods | Improve this Doc View Source TryGetHttpContext(TransactionSamplingContext) Gets the associated with the transaction. May return null if the value has not been set by the integration. Declaration public static HttpContext? TryGetHttpContext(this TransactionSamplingContext samplingContext) Parameters Type Name Description TransactionSamplingContext samplingContext Returns Type Description Nullable < HttpContext > Remarks This method extracts data from which is populated by Sentry's ASP.NET Core integration. | Improve this Doc View Source TryGetHttpMethod(TransactionSamplingContext) Gets the HTTP method associated with the transaction. May return null if the value has not been set by the integration. Declaration public static string? TryGetHttpMethod(this TransactionSamplingContext samplingContext) Parameters Type Name Description TransactionSamplingContext samplingContext Returns Type Description Nullable < String > Remarks This method extracts data from which is populated by Sentry's ASP.NET Core integration. | Improve this Doc View Source TryGetHttpPath(TransactionSamplingContext) Gets the HTTP path associated with the transaction. May return null if the value has not been set by the integration. Declaration public static string? TryGetHttpPath(this TransactionSamplingContext samplingContext) Parameters Type Name Description TransactionSamplingContext samplingContext Returns Type Description Nullable < String > Remarks This method extracts data from which is populated by Sentry's ASP.NET Core integration. | Improve this Doc View Source TryGetHttpRoute(TransactionSamplingContext) Gets the HTTP route associated with the transaction. May return null if the value has not been set by the integration. Declaration public static string? TryGetHttpRoute(this TransactionSamplingContext samplingContext) Parameters Type Name Description TransactionSamplingContext samplingContext Returns Type Description Nullable < String > Remarks This method extracts data from which is populated by Sentry's ASP.NET Core integration."
  },
  "api/Sentry.AspNetCore.ScopeExtensions.html": {
    "href": "api/Sentry.AspNetCore.ScopeExtensions.html",
    "title": "Class ScopeExtensions | Sentry .NET",
    "keywords": "Class ScopeExtensions Scope Extensions Inheritance Object ScopeExtensions Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public static class ScopeExtensions : object Methods | Improve this Doc View Source Populate(Scope, Activity) Populates the scope with the System.Diagnostics.Activity Declaration public static void Populate(this Scope scope, Activity activity) Parameters Type Name Description Scope scope The scope. Activity activity The activity. | Improve this Doc View Source Populate(Scope, HttpContext, SentryAspNetCoreOptions) Populates the scope with the HTTP data Declaration public static void Populate(this Scope scope, HttpContext context, SentryAspNetCoreOptions options) Parameters Type Name Description Scope scope HttpContext context SentryAspNetCoreOptions options Remarks NOTE: The scope is applied to the event BEFORE running the event processors/exception processors. The main Sentry SDK has processors which run right before any additional processors to the Event"
  },
  "api/Sentry.AspNetCore.SentryAspNetCoreLoggerProvider.html": {
    "href": "api/Sentry.AspNetCore.SentryAspNetCoreLoggerProvider.html",
    "title": "Class SentryAspNetCoreLoggerProvider | Sentry .NET",
    "keywords": "Class SentryAspNetCoreLoggerProvider Logger provider for Sentry. Inheritance Object SentryLoggerProvider SentryAspNetCoreLoggerProvider Inherited Members SentryLoggerProvider.CreateLogger(String) SentryLoggerProvider.Dispose() Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public class SentryAspNetCoreLoggerProvider : SentryLoggerProvider Constructors | Improve this Doc View Source SentryAspNetCoreLoggerProvider(IOptions<SentryAspNetCoreOptions>, IHub) Creates a new instance of SentryAspNetCoreLoggerProvider Declaration public SentryAspNetCoreLoggerProvider(IOptions<SentryAspNetCoreOptions> options, IHub hub) Parameters Type Name Description IOptions < SentryAspNetCoreOptions > options IHub hub"
  },
  "api/Sentry.AspNetCore.SentryAspNetCoreOptions.html": {
    "href": "api/Sentry.AspNetCore.SentryAspNetCoreOptions.html",
    "title": "Class SentryAspNetCoreOptions | Sentry .NET",
    "keywords": "Class SentryAspNetCoreOptions An options class for the ASP.NET Core Sentry integration Inheritance Object SentryLoggingOptions SentryAspNetCoreOptions Inherited Members SentryLoggingOptions.MinimumBreadcrumbLevel SentryLoggingOptions.MinimumEventLevel SentryLoggingOptions.InitializeSdk Sentry.Extensions.Logging.SentryLoggingOptions.ConfigureScope(Action<>) Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public class SentryAspNetCoreOptions : SentryLoggingOptions Constructors | Improve this Doc View Source SentryAspNetCoreOptions() Creates a new instance of SentryAspNetCoreOptions . Declaration public SentryAspNetCoreOptions() Properties | Improve this Doc View Source AdjustStandardEnvironmentNameCasing Controls whether the casing of the standard (Production, Development and Staging) environment name supplied by is adjusted when setting the Sentry environment. Defaults to true. Declaration public bool AdjustStandardEnvironmentNameCasing { get; set; } Property Value Type Description Boolean Remarks The default .NET Core environment names include Production, Development and Staging (note Pascal casing), whereas Sentry prefers to have its environment setting be all lower case. | Improve this Doc View Source FlushOnCompletedRequest Flush on completed request Declaration public bool FlushOnCompletedRequest { get; set; } Property Value Type Description Boolean | Improve this Doc View Source FlushTimeout How long to wait for the flush to finish. Defaults to 2 seconds. Declaration public TimeSpan FlushTimeout { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source IncludeActivityData Gets or sets a value indicating whether [include System.Diagnostic.Activity data] to events. Declaration public bool IncludeActivityData { get; set; } Property Value Type Description Boolean true if [include activity data]; otherwise, false . See Also https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/ActivityUserGuide.md | Improve this Doc View Source MaxRequestBodySize Controls the size of the request body to extract if any. Declaration public RequestSize MaxRequestBodySize { get; set; } Property Value Type Description RequestSize Remarks No truncation is done by the SDK. If the request body is larger than the accepted size, nothing is sent. | Improve this Doc View Source TransactionNameProvider The strategy to define the name of a transaction based on the . Declaration public TransactionNameProvider TransactionNameProvider { get; set; } Property Value Type Description TransactionNameProvider Remarks The SDK can name transactions automatically when using MVC or Endpoint Routing. In other cases, like when serving static files, it will fallback to the URL path. This hook allows custom code to define a transaction name given a ."
  },
  "api/Sentry.AspNetCore.SentryAspNetCoreOptionsSetup.html": {
    "href": "api/Sentry.AspNetCore.SentryAspNetCoreOptionsSetup.html",
    "title": "Class SentryAspNetCoreOptionsSetup | Sentry .NET",
    "keywords": "Class SentryAspNetCoreOptionsSetup Sets up ASP.NET Core option for Sentry. Inheritance Object SentryAspNetCoreOptionsSetup Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public class SentryAspNetCoreOptionsSetup : ConfigureFromConfigurationOptions<SentryAspNetCoreOptions> Constructors | Improve this Doc View Source SentryAspNetCoreOptionsSetup(ILoggerProviderConfiguration<SentryAspNetCoreLoggerProvider>) Creates a new instance of SentryAspNetCoreOptionsSetup . Declaration public SentryAspNetCoreOptionsSetup(ILoggerProviderConfiguration<SentryAspNetCoreLoggerProvider> providerConfiguration) Parameters Type Name Description ILoggerProviderConfiguration < SentryAspNetCoreLoggerProvider > providerConfiguration | Improve this Doc View Source SentryAspNetCoreOptionsSetup(ILoggerProviderConfiguration<SentryAspNetCoreLoggerProvider>, IHostingEnvironment) Creates a new instance of SentryAspNetCoreOptionsSetup . Declaration public SentryAspNetCoreOptionsSetup(ILoggerProviderConfiguration<SentryAspNetCoreLoggerProvider> providerConfiguration, IHostingEnvironment hostingEnvironment) Parameters Type Name Description ILoggerProviderConfiguration < SentryAspNetCoreLoggerProvider > providerConfiguration IHostingEnvironment hostingEnvironment Methods | Improve this Doc View Source Configure(SentryAspNetCoreOptions) Configures the SentryAspNetCoreOptions . Declaration public override void Configure(SentryAspNetCoreOptions options) Parameters Type Name Description SentryAspNetCoreOptions options"
  },
  "api/Sentry.AspNetCore.SentryBuilderExtensions.html": {
    "href": "api/Sentry.AspNetCore.SentryBuilderExtensions.html",
    "title": "Class SentryBuilderExtensions | Sentry .NET",
    "keywords": "Class SentryBuilderExtensions Extension methods for ISentryBuilder Inheritance Object SentryBuilderExtensions Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public static class SentryBuilderExtensions : object Methods | Improve this Doc View Source AddSentryOptions(ISentryBuilder, Nullable<Action<SentryAspNetCoreOptions>>) Configure Sentry options Declaration public static ISentryBuilder AddSentryOptions(this ISentryBuilder builder, Action<SentryAspNetCoreOptions>? configureOptions) Parameters Type Name Description ISentryBuilder builder The Sentry builder Nullable < Action < SentryAspNetCoreOptions >> configureOptions The configure options Returns Type Description ISentryBuilder"
  },
  "api/Sentry.AspNetCore.SentryStartupFilter.html": {
    "href": "api/Sentry.AspNetCore.SentryStartupFilter.html",
    "title": "Class SentryStartupFilter | Sentry .NET",
    "keywords": "Class SentryStartupFilter Starts Sentry integration. Inheritance Object SentryStartupFilter Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public class SentryStartupFilter : IStartupFilter Methods | Improve this Doc View Source Configure(Action<IApplicationBuilder>) Adds Sentry to the pipeline. Declaration public Action<IApplicationBuilder> Configure(Action<IApplicationBuilder> next) Parameters Type Name Description Action < IApplicationBuilder > next Returns Type Description Action < IApplicationBuilder >"
  },
  "api/Sentry.AspNetCore.SentryTunnelMiddleware.html": {
    "href": "api/Sentry.AspNetCore.SentryTunnelMiddleware.html",
    "title": "Class SentryTunnelMiddleware | Sentry .NET",
    "keywords": "Class SentryTunnelMiddleware Middleware that can forward Sentry envelopes. Inheritance Object SentryTunnelMiddleware SentryTunnelMiddleware Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public class SentryTunnelMiddleware : IMiddleware Constructors | Improve this Doc View Source SentryTunnelMiddleware(String[]) Middleware that can forward Sentry envelopes. Declaration public SentryTunnelMiddleware(string[] allowedHosts) Parameters Type Name Description String [] allowedHosts See Also https://docs.sentry.io/platforms/javascript/troubleshooting/#dealing-with-ad-blockers Methods | Improve this Doc View Source InvokeAsync(HttpContext, RequestDelegate) Declaration public Task InvokeAsync(HttpContext context, RequestDelegate next) Parameters Type Name Description HttpContext context RequestDelegate next Returns Type Description Task See Also https://docs.sentry.io/platforms/javascript/troubleshooting/#dealing-with-ad-blockers"
  },
  "api/Sentry.AspNetCore.TransactionNameProvider.html": {
    "href": "api/Sentry.AspNetCore.TransactionNameProvider.html",
    "title": "Delegate TransactionNameProvider | Sentry .NET",
    "keywords": "Delegate TransactionNameProvider Provides the strategy to define the name of a transaction based on the . Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public delegate string? TransactionNameProvider(HttpContext context); Parameters Type Name Description HttpContext context Returns Type Description Nullable < String > Remarks The SDK can name transactions automatically when using MVC or Endpoint Routing. In other cases, like when serving static files, it fallback to Unknown Route. This hook allows custom code to define a transaction name given a ."
  },
  "api/Sentry.EntityFramework.ErrorProcessors.DbConcurrencyExceptionProcessor.html": {
    "href": "api/Sentry.EntityFramework.ErrorProcessors.DbConcurrencyExceptionProcessor.html",
    "title": "Class DbConcurrencyExceptionProcessor | Sentry .NET",
    "keywords": "Class DbConcurrencyExceptionProcessor Exception processor for Entity Framework . Inheritance Object DbConcurrencyExceptionProcessor Namespace : Sentry.EntityFramework.ErrorProcessors Assembly : Sentry.EntityFramework.dll Syntax public class DbConcurrencyExceptionProcessor : SentryEventExceptionProcessor<DBConcurrencyException> Methods | Improve this Doc View Source ProcessException(DBConcurrencyException, SentryEvent) Extracts RowCount and RowError from . Declaration protected override void ProcessException(DBConcurrencyException exception, SentryEvent sentryEvent) Parameters Type Name Description DBConcurrencyException exception SentryEvent sentryEvent"
  },
  "api/Sentry.EntityFramework.ErrorProcessors.DbEntityValidationExceptionProcessor.html": {
    "href": "api/Sentry.EntityFramework.ErrorProcessors.DbEntityValidationExceptionProcessor.html",
    "title": "Class DbEntityValidationExceptionProcessor | Sentry .NET",
    "keywords": "Class DbEntityValidationExceptionProcessor Exception processor for . Inheritance Object DbEntityValidationExceptionProcessor Namespace : Sentry.EntityFramework.ErrorProcessors Assembly : Sentry.EntityFramework.dll Syntax public class DbEntityValidationExceptionProcessor : SentryEventExceptionProcessor<DbEntityValidationException> Methods | Improve this Doc View Source ProcessException(DbEntityValidationException, SentryEvent) Extracts details from into the . Declaration protected override void ProcessException(DbEntityValidationException exception, SentryEvent sentryEvent) Parameters Type Name Description DbEntityValidationException exception SentryEvent sentryEvent"
  },
  "api/Sentry.EntityFramework.ErrorProcessors.html": {
    "href": "api/Sentry.EntityFramework.ErrorProcessors.html",
    "title": "Namespace Sentry.EntityFramework.ErrorProcessors | Sentry .NET",
    "keywords": "Namespace Sentry.EntityFramework.ErrorProcessors Classes DbConcurrencyExceptionProcessor Exception processor for Entity Framework . DbEntityValidationExceptionProcessor Exception processor for ."
  },
  "api/Sentry.EntityFramework.html": {
    "href": "api/Sentry.EntityFramework.html",
    "title": "Namespace Sentry.EntityFramework | Sentry .NET",
    "keywords": "Namespace Sentry.EntityFramework Classes SentryCommandInterceptor A command interceptor to augment data for Sentry. SentryDatabaseLogging Sentry Database Logger Interfaces IQueryLogger A query logger interface."
  },
  "api/Sentry.EntityFramework.IQueryLogger.html": {
    "href": "api/Sentry.EntityFramework.IQueryLogger.html",
    "title": "Interface IQueryLogger | Sentry .NET",
    "keywords": "Interface IQueryLogger A query logger interface. Namespace : Sentry.EntityFramework Assembly : Sentry.EntityFramework.dll Syntax public interface IQueryLogger Methods | Improve this Doc View Source Log(String, BreadcrumbLevel) Logs a query with a related level. Declaration void Log(string text, BreadcrumbLevel level = null) Parameters Type Name Description String text The query text. BreadcrumbLevel level The level."
  },
  "api/Sentry.EntityFramework.SentryCommandInterceptor.html": {
    "href": "api/Sentry.EntityFramework.SentryCommandInterceptor.html",
    "title": "Class SentryCommandInterceptor | Sentry .NET",
    "keywords": "Class SentryCommandInterceptor A command interceptor to augment data for Sentry. Inheritance Object SentryCommandInterceptor Namespace : Sentry.EntityFramework Assembly : Sentry.EntityFramework.dll Syntax public class SentryCommandInterceptor : IDbCommandInterceptor Constructors | Improve this Doc View Source SentryCommandInterceptor(IQueryLogger) Creates a new instance of SentryCommandInterceptor . Declaration public SentryCommandInterceptor(IQueryLogger queryLogger) Parameters Type Name Description IQueryLogger queryLogger Methods | Improve this Doc View Source Log<T>(DbCommand, DbCommandInterceptionContext<T>) Logs the with the specified context. Declaration public virtual void Log<T>(DbCommand command, DbCommandInterceptionContext<T> interceptionContext) Parameters Type Name Description DbCommand command DbCommandInterceptionContext <T> interceptionContext Type Parameters Name Description T | Improve this Doc View Source NonQueryExecuted(DbCommand, DbCommandInterceptionContext<Int32>) No Op. Declaration public void NonQueryExecuted(DbCommand command, DbCommandInterceptionContext<int> interceptionContext) Parameters Type Name Description DbCommand command DbCommandInterceptionContext < Int32 > interceptionContext | Improve this Doc View Source NonQueryExecuting(DbCommand, DbCommandInterceptionContext<Int32>) Logs a call to NonQueryExecuting(DbCommand, DbCommandInterceptionContext<Int32>) . Declaration public void NonQueryExecuting(DbCommand command, DbCommandInterceptionContext<int> interceptionContext) Parameters Type Name Description DbCommand command DbCommandInterceptionContext < Int32 > interceptionContext | Improve this Doc View Source ReaderExecuted(DbCommand, DbCommandInterceptionContext<DbDataReader>) No Op. Declaration public void ReaderExecuted(DbCommand command, DbCommandInterceptionContext<DbDataReader> interceptionContext) Parameters Type Name Description DbCommand command DbCommandInterceptionContext < DbDataReader > interceptionContext | Improve this Doc View Source ReaderExecuting(DbCommand, DbCommandInterceptionContext<DbDataReader>) Logs a call to ReaderExecuting(DbCommand, DbCommandInterceptionContext<DbDataReader>) . Declaration public void ReaderExecuting(DbCommand command, DbCommandInterceptionContext<DbDataReader> interceptionContext) Parameters Type Name Description DbCommand command DbCommandInterceptionContext < DbDataReader > interceptionContext | Improve this Doc View Source ScalarExecuted(DbCommand, DbCommandInterceptionContext<Object>) Logs a call to ScalarExecuted(DbCommand, DbCommandInterceptionContext<Object>) . Declaration public void ScalarExecuted(DbCommand command, DbCommandInterceptionContext<object> interceptionContext) Parameters Type Name Description DbCommand command DbCommandInterceptionContext < Object > interceptionContext | Improve this Doc View Source ScalarExecuting(DbCommand, DbCommandInterceptionContext<Object>) Logs a call to ScalarExecuting(DbCommand, DbCommandInterceptionContext<Object>) . Declaration public void ScalarExecuting(DbCommand command, DbCommandInterceptionContext<object> interceptionContext) Parameters Type Name Description DbCommand command DbCommandInterceptionContext < Object > interceptionContext"
  },
  "api/Sentry.EntityFramework.SentryDatabaseLogging.html": {
    "href": "api/Sentry.EntityFramework.SentryDatabaseLogging.html",
    "title": "Class SentryDatabaseLogging | Sentry .NET",
    "keywords": "Class SentryDatabaseLogging Sentry Database Logger Inheritance Object SentryDatabaseLogging Namespace : Sentry.EntityFramework Assembly : Sentry.EntityFramework.dll Syntax public static class SentryDatabaseLogging : object Methods | Improve this Doc View Source UseBreadcrumbs(IQueryLogger) Adds an instance of SentryCommandInterceptor to This is a static setup call, so make sure you only call it once for each IQueryLogger instance you want to register globally Declaration public static SentryCommandInterceptor UseBreadcrumbs(IQueryLogger logger = null) Parameters Type Name Description IQueryLogger logger Query Logger. Returns Type Description SentryCommandInterceptor"
  },
  "api/Sentry.Extensions.Logging.DelegateLogEntryFilter.html": {
    "href": "api/Sentry.Extensions.Logging.DelegateLogEntryFilter.html",
    "title": "Class DelegateLogEntryFilter | Sentry .NET",
    "keywords": "Class DelegateLogEntryFilter An implementation of ILogEntryFilter that invokes a Func<TResult> Inheritance Object DelegateLogEntryFilter Implements ILogEntryFilter Namespace : Sentry.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax public class DelegateLogEntryFilter : object, ILogEntryFilter Constructors | Improve this Doc View Source DelegateLogEntryFilter(Func<String, LogLevel, EventId, Nullable<Exception>, Boolean>) Creates a new instance of DelegateLogEntryFilter Declaration public DelegateLogEntryFilter(Func<string, LogLevel, EventId, Exception?, bool> filter) Parameters Type Name Description Func < String , LogLevel , EventId , Nullable < Exception >, Boolean > filter Methods | Improve this Doc View Source Filter(String, LogLevel, EventId, Nullable<Exception>) Whether a log entry should be filtered out or not. Declaration public bool Filter(string categoryName, LogLevel logLevel, EventId eventId, Exception? exception) Parameters Type Name Description String categoryName The logger category name. LogLevel logLevel The event level. EventId eventId The EventId. Nullable < Exception > exception The Exception, if any. Returns Type Description Boolean Remarks Before processing a log entry, Sentry.Extensions.Logging.SentryLogger invokes all registered ILogEntryFilter giving the application an opportunity to avoid recoding the log entry as a breadcrumb or sending an event. Implements ILogEntryFilter"
  },
  "api/Sentry.Extensions.Logging.Extensions.DependencyInjection.html": {
    "href": "api/Sentry.Extensions.Logging.Extensions.DependencyInjection.html",
    "title": "Namespace Sentry.Extensions.Logging.Extensions.DependencyInjection | Sentry .NET",
    "keywords": "Namespace Sentry.Extensions.Logging.Extensions.DependencyInjection Classes ServiceCollectionExtensions Extension methods for"
  },
  "api/Sentry.Extensions.Logging.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Sentry.Extensions.Logging.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Sentry .NET",
    "keywords": "Class ServiceCollectionExtensions Extension methods for Inheritance Object ServiceCollectionExtensions Namespace : Sentry.Extensions.Logging.Extensions.DependencyInjection Assembly : Sentry.Extensions.Logging.dll Syntax public static class ServiceCollectionExtensions : object Methods | Improve this Doc View Source AddSentry<TOptions>(IServiceCollection) Adds Sentry's services to the Declaration public static IServiceCollection AddSentry<TOptions>(this IServiceCollection services) where TOptions : SentryLoggingOptions, new() Parameters Type Name Description IServiceCollection services The services. Returns Type Description IServiceCollection Type Parameters Name Description TOptions"
  },
  "api/Sentry.Extensions.Logging.html": {
    "href": "api/Sentry.Extensions.Logging.html",
    "title": "Namespace Sentry.Extensions.Logging | Sentry .NET",
    "keywords": "Namespace Sentry.Extensions.Logging Classes DelegateLogEntryFilter An implementation of ILogEntryFilter that invokes a Func<TResult> MelDiagnosticLogger MEL => Microsoft.Extensions.Logging SentryLoggerProvider Sentry Logger Provider. SentryLoggingOptions Sentry logging integration options SentryLoggingOptionsExtensions SentryLoggingOptions extensions. Interfaces ILogEntryFilter An abstraction to filter log entries before they reach Sentry.Extensions.Logging.SentryLogger"
  },
  "api/Sentry.Extensions.Logging.ILogEntryFilter.html": {
    "href": "api/Sentry.Extensions.Logging.ILogEntryFilter.html",
    "title": "Interface ILogEntryFilter | Sentry .NET",
    "keywords": "Interface ILogEntryFilter An abstraction to filter log entries before they reach Sentry.Extensions.Logging.SentryLogger Namespace : Sentry.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax public interface ILogEntryFilter Methods | Improve this Doc View Source Filter(String, LogLevel, EventId, Nullable<Exception>) Whether a log entry should be filtered out or not. Declaration bool Filter(string categoryName, LogLevel logLevel, EventId eventId, Exception? exception) Parameters Type Name Description String categoryName The logger category name. LogLevel logLevel The event level. EventId eventId The EventId. Nullable < Exception > exception The Exception, if any. Returns Type Description Boolean Remarks Before processing a log entry, Sentry.Extensions.Logging.SentryLogger invokes all registered ILogEntryFilter giving the application an opportunity to avoid recoding the log entry as a breadcrumb or sending an event."
  },
  "api/Sentry.Extensions.Logging.MelDiagnosticLogger.html": {
    "href": "api/Sentry.Extensions.Logging.MelDiagnosticLogger.html",
    "title": "Class MelDiagnosticLogger | Sentry .NET",
    "keywords": "Class MelDiagnosticLogger MEL => Microsoft.Extensions.Logging Inheritance Object MelDiagnosticLogger Namespace : Sentry.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax public class MelDiagnosticLogger : IDiagnosticLogger Remarks Replaces the default Console logger as early as the logging factory is built Constructors | Improve this Doc View Source MelDiagnosticLogger(ILogger<ISentryClient>, SentryLevel) Creates a new instance of MelDiagnosticLogger . Declaration public MelDiagnosticLogger(ILogger<ISentryClient> logger, SentryLevel level) Parameters Type Name Description ILogger < ISentryClient > logger SentryLevel level Methods | Improve this Doc View Source IsEnabled(SentryLevel) Whether this logger is enabled for the provided level Declaration public bool IsEnabled(SentryLevel level) Parameters Type Name Description SentryLevel level Returns Type Description Boolean Remarks Enabled if the level is equal or higher than then both set via the options and also the inner | Improve this Doc View Source Log(SentryLevel, String, Nullable<Exception>, Nullable<Object>[]) Logs the message. Declaration public void Log(SentryLevel logLevel, string message, Exception? exception = null, params object? [] args) Parameters Type Name Description SentryLevel logLevel String message Nullable < Exception > exception Nullable < Object >[] args"
  },
  "api/Sentry.Extensions.Logging.SentryLoggerProvider.html": {
    "href": "api/Sentry.Extensions.Logging.SentryLoggerProvider.html",
    "title": "Class SentryLoggerProvider | Sentry .NET",
    "keywords": "Class SentryLoggerProvider Sentry Logger Provider. Inheritance Object SentryLoggerProvider SentryAspNetCoreLoggerProvider Namespace : Sentry.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax public class SentryLoggerProvider : ILoggerProvider Constructors | Improve this Doc View Source SentryLoggerProvider(IOptions<SentryLoggingOptions>, IHub) Creates a new instance of SentryLoggerProvider . Declaration public SentryLoggerProvider(IOptions<SentryLoggingOptions> options, IHub hub) Parameters Type Name Description IOptions < SentryLoggingOptions > options The Options. IHub hub The Hub. Methods | Improve this Doc View Source CreateLogger(String) Creates a logger for the category. Declaration public ILogger CreateLogger(string categoryName) Parameters Type Name Description String categoryName Category name. Returns Type Description ILogger A logger. | Improve this Doc View Source Dispose() Dispose. Declaration public void Dispose()"
  },
  "api/Sentry.Extensions.Logging.SentryLoggingOptions.html": {
    "href": "api/Sentry.Extensions.Logging.SentryLoggingOptions.html",
    "title": "Class SentryLoggingOptions | Sentry .NET",
    "keywords": "Class SentryLoggingOptions Sentry logging integration options Inheritance Object SentryLoggingOptions SentryAspNetCoreOptions Namespace : Sentry.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax public class SentryLoggingOptions : SentryOptions Properties | Improve this Doc View Source InitializeSdk Whether to initialize this SDK through this integration Declaration public bool InitializeSdk { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MinimumBreadcrumbLevel Gets or sets the minimum breadcrumb level. Declaration public LogLevel MinimumBreadcrumbLevel { get; set; } Property Value Type Description LogLevel The minimum breadcrumb level. Remarks Events with this level or higher will be stored as | Improve this Doc View Source MinimumEventLevel Gets or sets the minimum event level. Declaration public LogLevel MinimumEventLevel { get; set; } Property Value Type Description LogLevel The minimum event level. Remarks Events with this level or higher will be sent to Sentry Methods | Improve this Doc View Source ConfigureScope(Action<Scope>) Add a callback to configure the scope upon SDK initialization Declaration public void ConfigureScope(Action<Scope> action) Parameters Type Name Description Action < Scope > action The function to invoke when initializing the SDK Extension Methods SentryLoggingOptionsExtensions.AddLogEntryFilter(SentryLoggingOptions, ILogEntryFilter) SentryLoggingOptionsExtensions.AddLogEntryFilter(SentryLoggingOptions, Func<String, LogLevel, EventId, Nullable<Exception>, Boolean>)"
  },
  "api/Sentry.Extensions.Logging.SentryLoggingOptionsExtensions.html": {
    "href": "api/Sentry.Extensions.Logging.SentryLoggingOptionsExtensions.html",
    "title": "Class SentryLoggingOptionsExtensions | Sentry .NET",
    "keywords": "Class SentryLoggingOptionsExtensions SentryLoggingOptions extensions. Inheritance Object SentryLoggingOptionsExtensions Namespace : Sentry.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax public static class SentryLoggingOptionsExtensions : object Methods | Improve this Doc View Source AddLogEntryFilter(SentryLoggingOptions, Func<String, LogLevel, EventId, Nullable<Exception>, Boolean>) Add an log event filter Declaration public static void AddLogEntryFilter(this SentryLoggingOptions options, Func<string, LogLevel, EventId, Exception?, bool> filter) Parameters Type Name Description SentryLoggingOptions options The SentryLoggingOptions to hold the filter. Func < String , LogLevel , EventId , Nullable < Exception >, Boolean > filter The filter. Remarks Filters are called before sending an event. This allows the filter to decide whether the log message should not be recorded at all. | Improve this Doc View Source AddLogEntryFilter(SentryLoggingOptions, ILogEntryFilter) Add an log event filter Declaration public static void AddLogEntryFilter(this SentryLoggingOptions options, ILogEntryFilter filter) Parameters Type Name Description SentryLoggingOptions options The SentryLoggingOptions to hold the filter. ILogEntryFilter filter The filter. Remarks Filters are called before sending an event. This allows the filter to decide whether the log message should not be recorded at all."
  },
  "api/Sentry.html": {
    "href": "api/Sentry.html",
    "title": "Namespace Sentry | Sentry .NET",
    "keywords": "Namespace Sentry Classes SentryOptionsDiagnosticExtensions The additional Sentry Options extensions from Sentry Diagnostic Listener. SentryOptionsExtensions Extension methods to"
  },
  "api/Sentry.Log4Net.html": {
    "href": "api/Sentry.Log4Net.html",
    "title": "Namespace Sentry.Log4Net | Sentry .NET",
    "keywords": "Namespace Sentry.Log4Net Classes SentryAppender Sentry appender for log4net."
  },
  "api/Sentry.Log4Net.SentryAppender.html": {
    "href": "api/Sentry.Log4Net.SentryAppender.html",
    "title": "Class SentryAppender | Sentry .NET",
    "keywords": "Class SentryAppender Sentry appender for log4net. Inheritance Object SentryAppender Namespace : Sentry.Log4Net Assembly : Sentry.Log4Net.dll Syntax public class SentryAppender : AppenderSkeleton Constructors | Improve this Doc View Source SentryAppender() Creates a new instance of the SentryAppender . Declaration public SentryAppender() Properties | Improve this Doc View Source Dsn Sentry DSN. Declaration public string? Dsn { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source Environment Environment to send in the event. Declaration public string? Environment { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source SendIdentity Whether to send the Identity or not. Declaration public bool SendIdentity { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Append(LoggingEvent) Append log. Declaration protected override void Append(LoggingEvent loggingEvent) Parameters Type Name Description LoggingEvent loggingEvent The event. | Improve this Doc View Source OnClose() Disposes the SDK if initialized. Declaration protected override void OnClose()"
  },
  "api/Sentry.NLog.html": {
    "href": "api/Sentry.NLog.html",
    "title": "Namespace Sentry.NLog | Sentry .NET",
    "keywords": "Namespace Sentry.NLog Classes SentryNLogOptions Sentry Options for NLog logging. All properties can be configured via code or in NLog.config xml file. SentryNLogUser A helper class used to configure Sentry user properties using NLog layouts SentryTarget Sentry NLog Target."
  },
  "api/Sentry.NLog.SentryNLogOptions.html": {
    "href": "api/Sentry.NLog.SentryNLogOptions.html",
    "title": "Class SentryNLogOptions | Sentry .NET",
    "keywords": "Class SentryNLogOptions Sentry Options for NLog logging. All properties can be configured via code or in NLog.config xml file. Inheritance Object SentryNLogOptions Namespace : Sentry.NLog Assembly : Sentry.NLog.dll Syntax public class SentryNLogOptions : SentryOptions Properties | Improve this Doc View Source BreadcrumbCategoryLayout Custom layout for breadcrumbs category Declaration public Layout? BreadcrumbCategoryLayout { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source BreadcrumbLayout Custom layout for breadcrumbs. Declaration public Layout? BreadcrumbLayout { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source DsnLayout Configured layout for Dsn-Address to Sentry Declaration public Layout? DsnLayout { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source EnvironmentLayout Configured layout for application Environment to Sentry Declaration public Layout? EnvironmentLayout { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source FlushTimeout How long to wait for the flush to finish. Defaults to 15 seconds (same as NLog default). Declaration public TimeSpan FlushTimeout { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source IgnoreEventsWithNoException Set this to true to ignore log messages that don't contain an exception. Declaration public bool IgnoreEventsWithNoException { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IncludeEventDataOnBreadcrumbs Determines whether or not to include event-level data as data in breadcrumbs for future errors. Defaults to false . Declaration public bool IncludeEventDataOnBreadcrumbs { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IncludeEventPropertiesAsTags Determines whether event properties will be sent to sentry as Tags or not. Defaults to false . Declaration public bool IncludeEventPropertiesAsTags { get; set; } Property Value Type Description Boolean | Improve this Doc View Source InitializeSdk Whether the NLog integration should initialize the SDK. Declaration public bool InitializeSdk { get; set; } Property Value Type Description Boolean Remarks By default, if a DSN is provided to the NLog integration it will initialize the SDK. This might be not ideal when using multiple integrations in case you want another one doing the Init. | Improve this Doc View Source Layout Configured layout for rendering SentryEvent message Declaration public Layout? Layout { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source MinimumBreadcrumbLevel Minimum log level to be included in the breadcrumb. Defaults to LogLevel.Info . Declaration public LogLevel? MinimumBreadcrumbLevel { get; set; } Property Value Type Description Nullable < LogLevel > | Improve this Doc View Source MinimumEventLevel Minimum log level for events to trigger a send to Sentry. Defaults to LogLevel.Error . Declaration public LogLevel? MinimumEventLevel { get; set; } Property Value Type Description Nullable < LogLevel > | Improve this Doc View Source ReleaseLayout Configured layout for application Release version to Sentry Declaration public Layout? ReleaseLayout { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source ShutdownTimeoutSeconds How many seconds to wait after triggering before just shutting down the Sentry sdk. Declaration public int ShutdownTimeoutSeconds { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Tags Any additional tags to apply to each logged message. Declaration public IList<TargetPropertyWithContext> Tags { get; } Property Value Type Description IList < TargetPropertyWithContext > | Improve this Doc View Source User Optionally configure one or more parts of the user information to be rendered dynamically from an NLog layout Declaration public SentryNLogUser User { get; set; } Property Value Type Description SentryNLogUser"
  },
  "api/Sentry.NLog.SentryNLogUser.html": {
    "href": "api/Sentry.NLog.SentryNLogUser.html",
    "title": "Class SentryNLogUser | Sentry .NET",
    "keywords": "Class SentryNLogUser A helper class used to configure Sentry user properties using NLog layouts Inheritance Object SentryNLogUser Namespace : Sentry.NLog Assembly : Sentry.NLog.dll Syntax public class SentryNLogUser : object Properties | Improve this Doc View Source Email A used to dynamically specify the email of a user for a sentry event. Declaration public Layout? Email { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source Id A used to dynamically specify the id of a user for a sentry event. Declaration public Layout? Id { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source IpAddress A used to dynamically specify the ip address of a user for a sentry event. Declaration public Layout? IpAddress { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source Other Additional information about the user Declaration public IList<TargetPropertyWithContext>? Other { get; } Property Value Type Description Nullable < IList < TargetPropertyWithContext >> | Improve this Doc View Source Segment A used to dynamically specify the segment of a user for a sentry event. Declaration public Layout? Segment { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source Username A used to dynamically specify the username of a user for a sentry event. Declaration public Layout? Username { get; set; } Property Value Type Description Nullable < Layout >"
  },
  "api/Sentry.NLog.SentryTarget.html": {
    "href": "api/Sentry.NLog.SentryTarget.html",
    "title": "Class SentryTarget | Sentry .NET",
    "keywords": "Class SentryTarget Sentry NLog Target. Inheritance Object SentryTarget Namespace : Sentry.NLog Assembly : Sentry.NLog.dll Syntax public sealed class SentryTarget : TargetWithContext Constructors | Improve this Doc View Source SentryTarget() Creates a new instance of SentryTarget . Declaration public SentryTarget() | Improve this Doc View Source SentryTarget(SentryNLogOptions) Creates a new instance of SentryTarget . Declaration public SentryTarget(SentryNLogOptions options) Parameters Type Name Description SentryNLogOptions options Properties | Improve this Doc View Source BreadcrumbCategory Configured layout for application Environment to Sentry Declaration public Layout? BreadcrumbCategory { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source BreadcrumbLayout An optional layout specific to breadcrumbs. If not set, uses the same layout as the standard . Declaration public Layout? BreadcrumbLayout { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source Dsn Configured layout for Data Source Name of a given project in Sentry Declaration public Layout? Dsn { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source Environment Configured layout for application Environment to Sentry Declaration public Layout? Environment { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source FlushTimeoutSeconds How long to wait for the flush to finish, in seconds. Defaults to 2 seconds. Declaration public int FlushTimeoutSeconds { get; set; } Property Value Type Description Int32 | Improve this Doc View Source IgnoreEventsWithNoException Set this to true to ignore log messages that don't contain an exception. Declaration public bool IgnoreEventsWithNoException { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IncludeEventDataOnBreadcrumbs Determines whether or not to include event-level data as data in breadcrumbs for future errors. Defaults to false . Declaration public bool IncludeEventDataOnBreadcrumbs { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IncludeEventPropertiesAsTags Determines whether event properties will be sent to sentry as Tags or not. Defaults to false . Declaration public bool IncludeEventPropertiesAsTags { get; set; } Property Value Type Description Boolean | Improve this Doc View Source InitializeSdk Whether the NLog integration should initialize the SDK. Declaration public bool InitializeSdk { get; set; } Property Value Type Description Boolean Remarks By default, if a DSN is provided to the NLog integration it will initialize the SDK. This might be not ideal when using multiple integrations in case you want another one doing the Init. | Improve this Doc View Source MinimumBreadcrumbLevel Minimum log level to be included in the breadcrumb. Defaults to LogLevel.Info . Declaration public string MinimumBreadcrumbLevel { get; set; } Property Value Type Description String | Improve this Doc View Source MinimumEventLevel Minimum log level for events to trigger a send to Sentry. Defaults to LogLevel.Error . Declaration public string MinimumEventLevel { get; set; } Property Value Type Description String | Improve this Doc View Source Options Options for both the SentryTarget and the sentry sdk itself. Declaration public SentryNLogOptions Options { get; } Property Value Type Description SentryNLogOptions | Improve this Doc View Source Release Configured layout for application Release version to Sentry Declaration public Layout? Release { get; set; } Property Value Type Description Nullable < Layout > | Improve this Doc View Source ShutdownTimeoutSeconds How many seconds to wait after triggering before just shutting down the Sentry sdk. Declaration public int ShutdownTimeoutSeconds { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Tags Add any desired additional tags that will be sent with every message. Declaration public IList<TargetPropertyWithContext> Tags { get; } Property Value Type Description IList < TargetPropertyWithContext > | Improve this Doc View Source User Optionally configure one or more parts of the user information to be rendered dynamically from an NLog layout Declaration public SentryNLogUser User { get; set; } Property Value Type Description SentryNLogUser Methods | Improve this Doc View Source CloseTarget() Declaration protected override void CloseTarget() | Improve this Doc View Source FlushAsync(AsyncContinuation) Declaration protected override void FlushAsync(AsyncContinuation asyncContinuation) Parameters Type Name Description AsyncContinuation asyncContinuation | Improve this Doc View Source InitializeTarget() Declaration protected override void InitializeTarget() | Improve this Doc View Source Write(LogEventInfo) If the event level >= the MinimumEventLevel , the logEvent is captured as an event by sentry. If the event level is >= the MinimumBreadcrumbLevel , the event is added as a breadcrumb to the Sentry Sdk. If sentry is not enabled, this is a No-op. Declaration protected override void Write(LogEventInfo logEvent) Parameters Type Name Description LogEventInfo logEvent The event that is being logged."
  },
  "api/Sentry.SentryOptionsDiagnosticExtensions.html": {
    "href": "api/Sentry.SentryOptionsDiagnosticExtensions.html",
    "title": "Class SentryOptionsDiagnosticExtensions | Sentry .NET",
    "keywords": "Class SentryOptionsDiagnosticExtensions The additional Sentry Options extensions from Sentry Diagnostic Listener. Inheritance Object SentryOptionsDiagnosticExtensions Namespace : Sentry Assembly : Sentry.DiagnosticSource.dll Syntax public static class SentryOptionsDiagnosticExtensions : object Methods | Improve this Doc View Source AddDiagnosticSourceIntegration(SentryOptions) Attach Sentry to System DiagnosticSource. Declaration public static void AddDiagnosticSourceIntegration(this SentryOptions options) Parameters Type Name Description SentryOptions options The Sentry options. | Improve this Doc View Source DisableDiagnosticSourceIntegration(SentryOptions) Disables the integrations with Diagnostic source. Declaration public static void DisableDiagnosticSourceIntegration(this SentryOptions options) Parameters Type Name Description SentryOptions options The SentryOptions to remove the integration from."
  },
  "api/Sentry.SentryOptionsExtensions.html": {
    "href": "api/Sentry.SentryOptionsExtensions.html",
    "title": "Class SentryOptionsExtensions | Sentry .NET",
    "keywords": "Class SentryOptionsExtensions Extension methods to Inheritance Object SentryOptionsExtensions Namespace : Sentry Assembly : Sentry.EntityFramework.dll Syntax public static class SentryOptionsExtensions : object Methods | Improve this Doc View Source AddEntityFramework(SentryOptions) Adds the entity framework integration. Declaration public static SentryOptions AddEntityFramework(this SentryOptions sentryOptions) Parameters Type Name Description SentryOptions sentryOptions The sentry options. Returns Type Description SentryOptions | Improve this Doc View Source DisableDbInterceptionIntegration(SentryOptions) Disables the integrations with DbInterception. Declaration public static void DisableDbInterceptionIntegration(this SentryOptions options) Parameters Type Name Description SentryOptions options The SentryOptions to remove the integration from."
  },
  "api/Sentry.Serilog.html": {
    "href": "api/Sentry.Serilog.html",
    "title": "Namespace Sentry.Serilog | Sentry .NET",
    "keywords": "Namespace Sentry.Serilog Classes SentrySerilogOptions Sentry Options for Serilog logging"
  },
  "api/Sentry.Serilog.SentrySerilogOptions.html": {
    "href": "api/Sentry.Serilog.SentrySerilogOptions.html",
    "title": "Class SentrySerilogOptions | Sentry .NET",
    "keywords": "Class SentrySerilogOptions Sentry Options for Serilog logging Inheritance Object SentrySerilogOptions Namespace : Sentry.Serilog Assembly : Sentry.Serilog.dll Syntax public class SentrySerilogOptions : SentryOptions Properties | Improve this Doc View Source FormatProvider Optional Declaration public IFormatProvider? FormatProvider { get; set; } Property Value Type Description Nullable < IFormatProvider > | Improve this Doc View Source InitializeSdk Whether to initialize this SDK through this integration Declaration public bool InitializeSdk { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MinimumBreadcrumbLevel Minimum log level to record a breadcrumb. Declaration public LogEventLevel MinimumBreadcrumbLevel { get; set; } Property Value Type Description LogEventLevel The minimum breadcrumb level. Remarks Events with this level or higher will be stored as | Improve this Doc View Source MinimumEventLevel Minimum log level to send an event. Declaration public LogEventLevel MinimumEventLevel { get; set; } Property Value Type Description LogEventLevel The minimum event level. Remarks Events with this level or higher will be sent to Sentry. | Improve this Doc View Source TextFormatter Optional Declaration public ITextFormatter? TextFormatter { get; set; } Property Value Type Description Nullable < ITextFormatter >"
  },
  "api/Sentry.Tunnel.html": {
    "href": "api/Sentry.Tunnel.html",
    "title": "Namespace Sentry.Tunnel | Sentry .NET",
    "keywords": "Namespace Sentry.Tunnel Classes SentryTunnelingApplicationBuilderExtensions Extension methods to add Sentry ingestion tunnel. SentryTunnelMiddleware Middleware that can forward Sentry envelopes."
  },
  "api/Sentry.Tunnel.SentryTunnelingApplicationBuilderExtensions.html": {
    "href": "api/Sentry.Tunnel.SentryTunnelingApplicationBuilderExtensions.html",
    "title": "Class SentryTunnelingApplicationBuilderExtensions | Sentry .NET",
    "keywords": "Class SentryTunnelingApplicationBuilderExtensions Extension methods to add Sentry ingestion tunnel. Inheritance Object SentryTunnelingApplicationBuilderExtensions Namespace : Sentry.Tunnel Assembly : Sentry.Tunnel.dll Syntax public static class SentryTunnelingApplicationBuilderExtensions : object Methods | Improve this Doc View Source AddSentryTunneling(IServiceCollection, String[]) Adds and configures the Sentry tunneling middleware. Declaration public static void AddSentryTunneling(this IServiceCollection services, params string[] hostnames) Parameters Type Name Description IServiceCollection services String [] hostnames The extra hostnames to be allowed for the tunneling. sentry.io is allowed by default; add your own Sentry domain if you use a self-hosted Sentry or Relay. | Improve this Doc View Source UseSentryTunneling(IApplicationBuilder, String) Adds the SentryTunnelMiddleware to the pipeline. Declaration public static void UseSentryTunneling(this IApplicationBuilder builder, string path = \"/tunnel\") Parameters Type Name Description IApplicationBuilder builder The app builder. String path The path to listen for Sentry envelopes."
  },
  "api/Sentry.Tunnel.SentryTunnelMiddleware.html": {
    "href": "api/Sentry.Tunnel.SentryTunnelMiddleware.html",
    "title": "Class SentryTunnelMiddleware | Sentry .NET",
    "keywords": "Class SentryTunnelMiddleware Middleware that can forward Sentry envelopes. Inheritance Object SentryTunnelMiddleware SentryTunnelMiddleware Inherited Members SentryTunnelMiddleware.InvokeAsync(HttpContext, RequestDelegate) Namespace : Sentry.Tunnel Assembly : Sentry.Tunnel.dll Syntax public class SentryTunnelMiddleware : SentryTunnelMiddleware Constructors | Improve this Doc View Source SentryTunnelMiddleware(String[]) Middleware that can forward Sentry envelopes. Declaration public SentryTunnelMiddleware(string[] allowedHosts) Parameters Type Name Description String [] allowedHosts See Also https://docs.sentry.io/platforms/javascript/troubleshooting/#dealing-with-ad-blockers See Also https://docs.sentry.io/platforms/javascript/troubleshooting/#dealing-with-ad-blockers"
  },
  "api/Serilog.html": {
    "href": "api/Serilog.html",
    "title": "Namespace Serilog | Sentry .NET",
    "keywords": "Namespace Serilog Classes SentrySinkExtensions Sentry Serilog Sink extensions."
  },
  "api/Serilog.SentrySinkExtensions.html": {
    "href": "api/Serilog.SentrySinkExtensions.html",
    "title": "Class SentrySinkExtensions | Sentry .NET",
    "keywords": "Class SentrySinkExtensions Sentry Serilog Sink extensions. Inheritance Object SentrySinkExtensions Namespace : Serilog Assembly : Sentry.Serilog.dll Syntax public static class SentrySinkExtensions : object Methods | Improve this Doc View Source ConfigureSentrySerilogOptions(SentrySerilogOptions, Nullable<String>, Nullable<LogEventLevel>, Nullable<LogEventLevel>, Nullable<IFormatProvider>, Nullable<ITextFormatter>, Nullable<Boolean>, Nullable<Boolean>, Nullable<String>, Nullable<Boolean>, Nullable<Int32>, Nullable<Single>, Nullable<String>, Nullable<String>, Nullable<Int32>, Nullable<TimeSpan>, Nullable<DecompressionMethods>, Nullable<CompressionLevel>, Nullable<Boolean>, Nullable<Boolean>, Nullable<SentryLevel>, Nullable<Boolean>, Nullable<DeduplicateMode>, Nullable<Boolean>, Nullable<Dictionary<String, String>>) Configure the Sentry Serilog Sink. Declaration public static void ConfigureSentrySerilogOptions(SentrySerilogOptions sentrySerilogOptions, string? dsn = null, LogEventLevel? minimumEventLevel = null, LogEventLevel? minimumBreadcrumbLevel = null, IFormatProvider? formatProvider = null, ITextFormatter? textFormatter = null, bool? sendDefaultPii = null, bool? isEnvironmentUser = null, string? serverName = null, bool? attachStackTrace = null, int? maxBreadcrumbs = null, float? sampleRate = null, string? release = null, string? environment = null, int? maxQueueItems = null, TimeSpan? shutdownTimeout = null, DecompressionMethods? decompressionMethods = null, CompressionLevel? requestBodyCompressionLevel = null, bool? requestBodyCompressionBuffered = null, bool? debug = null, SentryLevel? diagnosticLevel = null, bool? reportAssemblies = null, DeduplicateMode? deduplicateMode = null, bool? initializeSdk = null, Dictionary<string, string>? defaultTags = null) Parameters Type Name Description SentrySerilogOptions sentrySerilogOptions The logger configuration to configure with the given parameters. Nullable < String > dsn The Sentry DSN. Nullable < LogEventLevel > minimumEventLevel Minimum log level to send an event. Nullable < LogEventLevel > minimumBreadcrumbLevel Minimum log level to record a breadcrumb. Nullable < IFormatProvider > formatProvider The Serilog format provider. Nullable < ITextFormatter > textFormatter The Serilog text formatter. Nullable < Boolean > sendDefaultPii Whether to include default Personal Identifiable information. Nullable < Boolean > isEnvironmentUser Whether to report the as the User affected in the event. Nullable < String > serverName Gets or sets the name of the server running the application. Nullable < Boolean > attachStackTrace Whether to send the stack trace of a event captured without an exception. Nullable < Int32 > maxBreadcrumbs Gets or sets the maximum breadcrumbs. Nullable < Single > sampleRate The rate to sample events. Nullable < String > release The release version of the application. Nullable < String > environment The environment the application is running. Nullable < Int32 > maxQueueItems The maximum number of events to keep while the worker attempts to send them. Nullable < TimeSpan > shutdownTimeout How long to wait for events to be sent before shutdown. Nullable < DecompressionMethods > decompressionMethods Decompression methods accepted. Nullable < CompressionLevel > requestBodyCompressionLevel The level of which to compress the before sending to Sentry. Nullable < Boolean > requestBodyCompressionBuffered Whether the body compression is buffered and the request 'Content-Length' known in advance. Nullable < Boolean > debug Whether to log diagnostics messages. Nullable < SentryLevel > diagnosticLevel The diagnostics level to be used. Nullable < Boolean > reportAssemblies Whether or not to include referenced assemblies in each event sent to sentry. Defaults to true . Nullable < DeduplicateMode > deduplicateMode What modes to use for event automatic de-duplication. Nullable < Boolean > initializeSdk Whether to initialize this SDK through this integration. Nullable < Dictionary < String , String >> defaultTags Defaults tags to add to all events. | Improve this Doc View Source Sentry(LoggerSinkConfiguration, Action<SentrySerilogOptions>) Add Sentry sink to Serilog. Declaration public static LoggerConfiguration Sentry(this LoggerSinkConfiguration loggerConfiguration, Action<SentrySerilogOptions> configureOptions) Parameters Type Name Description LoggerSinkConfiguration loggerConfiguration The logger configuration. Action < SentrySerilogOptions > configureOptions The configure options callback. Returns Type Description LoggerConfiguration | Improve this Doc View Source Sentry(LoggerSinkConfiguration, Nullable<String>, LogEventLevel, LogEventLevel, Nullable<IFormatProvider>, Nullable<ITextFormatter>, Nullable<Boolean>, Nullable<Boolean>, Nullable<String>, Nullable<Boolean>, Nullable<Int32>, Nullable<Single>, Nullable<String>, Nullable<String>, Nullable<Int32>, Nullable<TimeSpan>, Nullable<DecompressionMethods>, Nullable<CompressionLevel>, Nullable<Boolean>, Nullable<Boolean>, Nullable<SentryLevel>, Nullable<Boolean>, Nullable<DeduplicateMode>, Nullable<Boolean>, Nullable<Dictionary<String, String>>) Add Sentry Serilog Sink. Declaration public static LoggerConfiguration Sentry(this LoggerSinkConfiguration loggerConfiguration, string? dsn = null, LogEventLevel minimumBreadcrumbLevel = null, LogEventLevel minimumEventLevel = null, IFormatProvider? formatProvider = null, ITextFormatter? textFormatter = null, bool? sendDefaultPii = null, bool? isEnvironmentUser = null, string? serverName = null, bool? attachStackTrace = null, int? maxBreadcrumbs = null, float? sampleRate = null, string? release = null, string? environment = null, int? maxQueueItems = null, TimeSpan? shutdownTimeout = null, DecompressionMethods? decompressionMethods = null, CompressionLevel? requestBodyCompressionLevel = null, bool? requestBodyCompressionBuffered = null, bool? debug = null, SentryLevel? diagnosticLevel = null, bool? reportAssemblies = null, DeduplicateMode? deduplicateMode = null, bool? initializeSdk = null, Dictionary<string, string>? defaultTags = null) Parameters Type Name Description LoggerSinkConfiguration loggerConfiguration The logger configuration . Nullable < String > dsn The Sentry DSN. LogEventLevel minimumBreadcrumbLevel Minimum log level to record a breadcrumb. LogEventLevel minimumEventLevel Minimum log level to send an event. Nullable < IFormatProvider > formatProvider The Serilog format provider. Nullable < ITextFormatter > textFormatter The Serilog text formatter. Nullable < Boolean > sendDefaultPii Whether to include default Personal Identifiable information. Nullable < Boolean > isEnvironmentUser Whether to report the as the User affected in the event. Nullable < String > serverName Gets or sets the name of the server running the application. Nullable < Boolean > attachStackTrace Whether to send the stack trace of a event captured without an exception. Nullable < Int32 > maxBreadcrumbs Gets or sets the maximum breadcrumbs. Nullable < Single > sampleRate The rate to sample events. Nullable < String > release The release version of the application. Nullable < String > environment The environment the application is running. Nullable < Int32 > maxQueueItems The maximum number of events to keep while the worker attempts to send them. Nullable < TimeSpan > shutdownTimeout How long to wait for events to be sent before shutdown. Nullable < DecompressionMethods > decompressionMethods Decompression methods accepted. Nullable < CompressionLevel > requestBodyCompressionLevel The level of which to compress the before sending to Sentry. Nullable < Boolean > requestBodyCompressionBuffered Whether the body compression is buffered and the request 'Content-Length' known in advance. Nullable < Boolean > debug Whether to log diagnostics messages. Nullable < SentryLevel > diagnosticLevel The diagnostics level to be used. Nullable < Boolean > reportAssemblies Whether or not to include referenced assemblies in each event sent to sentry. Defaults to true . Nullable < DeduplicateMode > deduplicateMode What modes to use for event automatic de-duplication. Nullable < Boolean > initializeSdk Whether to initialize this SDK through this integration. Nullable < Dictionary < String , String >> defaultTags Defaults tags to add to all events. Returns Type Description LoggerConfiguration Examples This sample shows how each item may be set from within a configuration file: { \"Serilog\": { \"Using\": [ \"Serilog\", \"Sentry\", ], \"WriteTo\": [{ \"Name\": \"Sentry\", \"Args\": { \"dsn\": \"https://MY-DSN@sentry.io\", \"minimumBreadcrumbLevel\": \"Verbose\", \"minimumEventLevel\": \"Error\", \"outputTemplate\": \"{Timestamp:o} [{Level:u3}] ({Application}/{MachineName}/{ThreadId}) {Message}{NewLine}{Exception}\"/// \"sendDefaultPii\": false, \"isEnvironmentUser\": false, \"serverName\": \"MyServerName\", \"attachStackTrace\": false, \"maxBreadcrumbs\": 20, \"sampleRate\": 0.5, \"release\": \"0.0.1\", \"environment\": \"staging\", \"maxQueueItems\": 100, \"shutdownTimeout\": \"00:00:05\", \"decompressionMethods\": \"GZip\", \"requestBodyCompressionLevel\": \"NoCompression\", \"requestBodyCompressionBuffered\": false, \"debug\": false, \"diagnosticLevel\": \"Debug\", \"reportAssemblies\": false, \"deduplicateMode\": \"All\", \"initializeSdk\": true, \"defaultTags\": { \"key-1\", \"value-1\", \"key-2\", \"value-2\" } } } ] } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "Sentry for .NET | Sentry .NET",
    "keywords": "Sentry for .NET This documentation will help you get started with integrating Sentry with your .NET application. Refer to the manual to get started and learn about concepts. The reference API documentation includes any public member of this SDK. Many of which include useful see also sections and links to external documentation, for example, on sentry.io . Want to see some actual code? The SDK is developed on GitHub . Feedback We'd love to hear your feedback. You can also engage with us via the following channels:"
  },
  "manual/getting-started.html": {
    "href": "manual/getting-started.html",
    "title": "Getting started | Sentry .NET",
    "keywords": "Getting started It's possible to simply import a single NuGet package and integrate Sentry with pretty much any .NET application. That is not necessarily the easiest way. Sentry provides multiple integrations , for specific types of applications. It's advised to look for an integration that best fits your application. Main concepts: Sentry Client The @Sentry.SentryClient is used to send events to Sentry. It has only synchronous methods because all its operations are executed in the calling thread without any I/O operation. Calling @Sentry.SentrySdk.CaptureException(Exception) will create a @Sentry.SentryEvent from the Exception provided. Internally, @Sentry.ISentryClient.CaptureEvent(Sentry.SentryEvent,Sentry.Protocol.Scope) is then called. Calling @Sentry.ISentryClient.CaptureEvent(Sentry.SentryEvent,Sentry.Protocol.Scope) will prepare the @Sentry.SentryEvent, applying the current @Sentry.Protocol.Scope data to it if one exists. If any @Sentry.Extensibility.ISentryEventProcessor or @Sentry.Extensibility.ISentryEventExceptionProcessor was configured by you, those are invoked too. Finally, the event is put into a in-memory queue to be sent to Sentry. Scope management By default, any call to AddBreadcrumb or ConfigureScope will access the same shared scope throughout the app. Perhaps that is what you need, for example on a WPF, WinForms or Xamarin app where a single user is using it. Or maybe you are building a ASP.NET application in which case you would prefer to create a new scope per request , ensuring that data in any single scope relates to a single request. The scope feature is leveraged by the ASP.NET Core integration for exactly this reason. It isolates data from each request so in case an event happens, only relevant data is sent to Sentry. This means you don't need to dig through logs with correlation ids in order to find the data relevant to you. Please check the manual for more."
  },
  "manual/log4net.html": {
    "href": "manual/log4net.html",
    "title": "Installing the integration on your app | Sentry .NET",
    "keywords": "Installing the integration on your app Using NuGet: Install-Package Sentry.Log4Net Or using the .NET Core CLI: dotnet add Sentry.Log4Net Configuration Once the log4net integration package is installed on your project, you can modify your configuration file to add the appender. This can be done, for example, via the app.config or web.config in case of ASP.NET. <appender name=\"SentryAppender\" type=\"Sentry.Log4Net.SentryAppender, Sentry.Log4Net\"> <Dsn value=\"dsn\"/> <!--Sends the log event Identity value as the user--> <SendIdentity value=\"true\" /> <Environment value=\"dev\" /> <threshold value=\"INFO\" /> </appender> For how it's done in this sample, please refer to sample app.config . The example above defines the DSN so that the SentryAppender is able to initialize the SDK. This is only one of the options. If you wish to configure the SDK manually in the app before creating the logging integration, you could leave the DSN out of the log4net configuration file and call: SentrySdk.Init(\"DSN\"); One of the advantages of this approach is that you can pass multiple configurations via the Init method. Bottom line is that the SDK needs to be initialized only once so you can choose where the initialization will happen. Other integrations (like ASP.NET) also is able to initialize the SDK. Make sure you pass the DSN to only one of these integrations, or if you are calling Init by yourself, there's no need to pass the DSN to the integration. Please refer to the sample to see it in action."
  },
  "manual/manual.html": {
    "href": "manual/manual.html",
    "title": "Manual | Sentry .NET",
    "keywords": "Manual Besides the examples documented here, you can refer to samples on GitHub . These are complete samples which you can run with a debugger to see how the SDK works. Static use The SDK provides a static entry point class called @Sentry.SentrySdk. Initialize the SDK @SentrySdk.Init Once the SDK is initialized, unhandled exceptions will automatically be captured and sent to Sentry. More context can be added, for example, breadcrumbs: SentrySdk.AddBreadcrumb(\"User accepted TOC\"); By default, the last 100 breadcrumbs are kept. This is configurable alongside many other settings via a parameter to the Init method. Breadcrumbs are attached to the scope. See further to understand Scopes. Scope management The scope is a lightweight object that exists in memory since the SDK is initialized. It can be used to augment events sent to Sentry. When the SDK is initialized, an empty Scope is already put in memory. That can be modified by you so that any event sent, regardless from where they are sent (e.g: a Logger integration that you configured) will include that scope data. You can create new scopes, which will clone the previous but will be totally isolated from it. The scope can be configured through: SentrySdk.ConfigureScope(scope => { scope.SetTag(\"Example\", \"Sentry docs\"); } There's also an asynchronous version if you need to do some I/O or run other TPL based work in order to retrieve the value to modify the scope: await SentrySdk.ConfigureScopeAsync(async scope => { // Anonymous object containing user retrieved from the DB scope.SetExtra(\"SomeExtraInfo\", new { Data = \"Value fetched asynchronously\", User = await _repository.GetUserId(id); }); }); ConfigureScope and ConfigureScopeAsync can be called as many times as you need. It'll invoke your callback with the current scope, allowing you to modify it further. To push a new scope into the stack and isolate any modifications from other scope, you can call: PushScope and call Dispose to drop it. using (SentrySdk.PushScope()) { SentrySdk.ConfigureScope(s => s.User = new User(\"name\")); Work(); // If an event happens inside this method, the user set above is sent with it. } // Disposed the scope above, User is no longer in the scope! Release The Sentry release feature (see Sentry docs to learn about it ) requires the SDK to send the actual application release number. That is done via the SentryEvent property called Release . Automatically discovering release version The SDK attempts to locate the release and add that to every event sent out to Sentry. Default values like 1.0 or 1.0.0.0 are ignored . It will firstly look at the entry assembly's AssemblyInformationalVersionAttribute , which accepts a string as value as is often used to set the GIT commit hash. If that returns null, it'll look at the default AssemblyVersionAttribute which accepts the numeric version number. When creating a project with Visual Studio, usually that includes version 1.0.0.0 . Since that usually means that the version is either not being set, or is set via a different method. The automatic version detection will disregard this value and no Release will be reported automatically."
  },
  "manual/testing.html": {
    "href": "manual/testing.html",
    "title": "| Sentry .NET",
    "keywords": "We often don't want to couple our code with static class like SentrySdk , especially to allow our code to be testable. If that's your case, you can use 2 abstractions: @Sentry.ISentryClient @Sentry.IHub The @Sentry.ISentryClient is responsible to queueing the event to be sent to Sentry and abstracting away the internal transport. The @Sentry.IHub on the other hand, holds a client and the current scope. It in fact also implements @Sentry.ISentryClient and is able to dispatch calls to the right client depending on the current scope. In order to allow different events hold different contextual data, you need to know in which scope you are in. That's the job of the Hub . It holds the scope management as well as a client. If all you are doing is sending events, without modification/access to the current scope, then you depend on @Sentry.ISentryClient. If on the other hand you would like to have access to the current scope by configuring it or binding a different client to it, etc. You'd depend on IHub . An example using IHub for testability is SentryLogger and its unit tests SentryLoggerTests . SentryLogger depends on IHub because it does modify the scope (through AddBreadcrumb ). In case it only sent events, it should instead depend on ISentryClient"
  }
}